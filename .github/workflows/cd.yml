name: CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_WEBAPP_NAME: '${{ vars.AZURE_WEBAPP_NAME }}'
  AZURE_RESOURCE_GROUP: '${{ vars.AZURE_RESOURCE_GROUP }}'
  DOCKER_IMAGE_NAME: '${{ vars.DOCKER_USERNAME }}/fiap-cloud-games'
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Debug Variables (for troubleshooting)
    #   run: |
    #     echo "Azure WebApp Name: ${{ env.AZURE_WEBAPP_NAME }}"
    #     echo "Azure Resource Group: ${{ env.AZURE_RESOURCE_GROUP }}"
    #     echo "Docker Username: ${{ env.DOCKER_USERNAME }}"
    #     echo "Docker Image: ${{ env.DOCKER_IMAGE_NAME }}"
    #     echo "JWT Issuer: ${{ vars.JWT_ISSUER }}"
    #     echo "Loki URI: ${{ vars.LOKI_URI }}"
    #     echo "Secrets are hidden, but checking if they exist:"
    #     echo "Azure SQL Connection String exists: ${{ secrets.AZURE_SQL_CONNECTION_STRING != '' }}"
    #     echo "JWT Key exists: ${{ secrets.JWT_KEY != '' }}"
    #     echo "Docker Password exists: ${{ secrets.DOCKER_PASSWORD != '' }}"
    #     echo "Azure Credentials exists: ${{ secrets.AZURE_CREDENTIALS != '' }}"
    #     echo "Azure Publish Profile exists: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE != '' }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and publish
      run: |
        dotnet build --configuration Release --no-restore
        dotnet publish -c Release -o ./publish --no-build

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: Push Docker image
      run: |
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest
        docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy no Azure Container Apps 01
      run: az containerapp update \
          --name cloud-games-cont02 \
          --resource-group FiapCG \
          --image docker.io/ulric650/fiap-cloud-games:55af1a7567007c74f4180fe249e475419770c0d3
 
          
    - name: Deploy to Azure Container Apps 02
      uses: azure/container-apps-deploy-action@v1
      with:
        containerAppName: cloud-games-cont02
        resourceGroup: FiapCG
        acrName: myregistry
        imageToDeploy: docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: Configure Azure Web App Settings
      run: |
        echo "Configurando vari�veis de ambiente no Azure Web App..."
        
        # Verificar se as vari�veis necess�rias est�o definidas
        if [ -z "${{ env.AZURE_RESOURCE_GROUP }}" ]; then
          echo "ERROR: AZURE_RESOURCE_GROUP n�o est� definido!"
          exit 1
        fi
        
        if [ -z "${{ env.AZURE_WEBAPP_NAME }}" ]; then
          echo "ERROR: AZURE_WEBAPP_NAME n�o est� definido!"
          exit 1
        fi
        
        # Configurar vari�veis de ambiente usando Azure CLI
        az webapp config appsettings set \
          --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --settings \
            "ConnectionStrings__DefaultConnection=${{ secrets.AZURE_SQL_CONNECTION_STRING }}" \
            "Jwt__Key=${{ secrets.JWT_KEY }}" \
            "Jwt__Issuer=${{ vars.JWT_ISSUER }}" \
            "ASPNETCORE_ENVIRONMENT=Production" \
            "Serilog__WriteTo__1__Args__uri=${{ vars.LOKI_URI }}"
        
        echo "Vari�veis configuradas com sucesso!"

    - name: Configure Docker Registry Settings
      run: |
        echo "Configurando credenciais do Docker Registry..."
        
        # Configurar credenciais do Docker Hub no Azure Web App
        az webapp config container set \
          --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --docker-custom-image-name "${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}" \
          --docker-registry-server-url "https://index.docker.io/v1/" \
          --docker-registry-server-user "${{ env.DOCKER_USERNAME }}" \
          --docker-registry-server-password "${{ secrets.DOCKER_PASSWORD }}"
        
        echo "Docker Registry configurado com sucesso!"

    - name: Restart Azure Web App
      run: az webapp restart --name "${{ env.AZURE_WEBAPP_NAME }}" --resource-group "${{ env.AZURE_RESOURCE_GROUP }}"
